package com.jbentley.testscoresaver;

import java.util.List;

import com.parse.FindCallback;
import com.parse.GetCallback;
import com.parse.ParseObject;
import com.parse.ParseQuery;
import com.parse.ParseQueryAdapter;

import android.os.Bundle;
import android.app.Activity;
import android.content.Context;
import android.util.Log;
import android.view.Menu;
import android.widget.ListView;
import android.widget.Toast;

public class DisplayScores extends Activity {
Context mContext;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_display_scores);
		
		

		if (neConn.connectionStatus(mContext)) {
			// TODO Auto-generated method stub
			ParseQuery<ParseObject> query = ParseQuery
					.getQuery("SFQuiz");
			query.setCachePolicy(ParseQuery.CachePolicy.NETWORK_ELSE_CACHE);
			query.findInBackground(new FindCallback<ParseObject>() {
				public void done(
						List<ParseObject> quizScoreList,
						ParseException e) {
					if (e == null) {
						Log.d("score", "Retrieved "
								+ quizScoreList.size()
								+ " scores");

						for (ParseObject scoreInfo : quizScoreList) {
							final String firstname = scoreInfo
									.getString("firstname");
							String lastname = scoreInfo
									.getString("lastname");
							String score = Integer
									.toString(scoreInfo
											.getInt("score"));
							TextView finalTextView = (TextView) findViewById(R.id.scoresTextView);
							finalTextView.setText(lastname
									+ ", " + firstname
									+ "     " + score + "\n"
									+ finalTextView.getText());

						}

					} else {
						Log.d("score",
								"Error: " + e.getMessage());
					}
				}
			});
		} else {
			Toast.makeText(
					mContext,
					"No Network Connection.\nNetwork Connection Required.",
					Toast.LENGTH_LONG).show();
		}
	
		
		
	}

	
	
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.display_scores, menu);
		return true;
	}
	
	

}
