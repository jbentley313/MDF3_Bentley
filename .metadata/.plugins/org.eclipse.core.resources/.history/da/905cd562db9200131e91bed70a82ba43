package com.jbentley.urgenthelp;

import java.util.ArrayList;
import java.util.Date;
import java.util.Map;

import android.os.Bundle;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.Toast;

public class ContactSetup extends Activity implements OnClickListener, OnItemClickListener {
	public final static  String Tag = "ContactSetup";
	Button addBtn;
	Button saveBtn;
	Button cancelBtn;
	EditText contactEdittext;
	Context mContext;
	ListView cList;
	ArrayList<String> list = new ArrayList<String>();
	ArrayAdapter<String> adapter;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_contact_setup);

		addBtn = (Button) findViewById(R.id.addNewContact);
		saveBtn = (Button) findViewById(R.id.saveBtn);
		cancelBtn = (Button) findViewById(R.id.cancelBtn);
		contactEdittext = (EditText) findViewById(R.id.enterContactEdittext);
		cList = (ListView) findViewById(R.id.cList);

		addBtn.setOnClickListener(this);
		saveBtn.setOnClickListener(this);
		cancelBtn.setOnClickListener(this);
		adapter = new ArrayAdapter<String>(this, android.R.layout.simple_expandable_list_item_1, list);
		cList.setAdapter(adapter);
		cList.setOnItemClickListener(this);

		//get the preferences
		SharedPreferences prefs = getSharedPreferences("userPrefs",0);

		Map<String,?> prefString = prefs.getAll();

		for(Map.Entry<String,?> entry : prefString.entrySet()){
			Log.d("email contacts",entry.getKey() + ": " + 
					entry.getValue().toString());   
			String email =  entry.getValue().toString();
			adapter.add(email);

		}

	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.contact_setup, menu);
		return true;
	}

	//button
	@Override
	public void onClick(View v) {
		// TODO Auto-generated method stub
		switch (v.getId()) {

		case R.id.addNewContact:
			contactEdittext.setVisibility(View.VISIBLE);
			saveBtn.setVisibility(View.VISIBLE);
			cancelBtn.setVisibility(View.VISIBLE);
			addBtn.setVisibility(View.GONE);
			break;

		case R.id.cancelBtn:
			contactEdittext.setVisibility(View.GONE);
			contactEdittext.setText("");
			saveBtn.setVisibility(View.GONE);
			cancelBtn.setVisibility(View.GONE);
			addBtn.setVisibility(View.VISIBLE);
			break;

		case R.id.saveBtn:

			String emailString = contactEdittext.getText().toString();
			Long timeStamp = new Date().getTime();
			String currentDateTime = Long.toString(timeStamp);

			//get the preferences
			SharedPreferences prefs = getSharedPreferences("userPrefs",0);
			SharedPreferences.Editor editPrefs = prefs.edit();

			editPrefs.putString(currentDateTime,emailString);
			if (emailString.isEmpty()) {
				Toast.makeText(this, "Please enter an email address", Toast.LENGTH_LONG).show();
			} else {
				addBtn.setVisibility(View.VISIBLE);
				editPrefs.commit();
				contactEdittext.setVisibility(View.GONE);
				contactEdittext.setText("");
				saveBtn.setVisibility(View.GONE);
				cancelBtn.setVisibility(View.GONE);
				addBtn.setVisibility(View.VISIBLE);

				Intent refreshConacts = new Intent(this, ContactSetup.class);

				startActivity(refreshConacts);
			}



			break;
		}




	}

	@Override
	public void onItemClick(AdapterView<?> arg0, View arg1, int position, long id) {
		// TODO Auto-generated method stub
		String pos = String.valueOf(position);
		String emailString = cList.getItemAtPosition(position).toString();
		
		deleteDatabase(emailString);
		Log.i(Tag, emailString);
	}

	
public void deleteEmailEntry(String emailString) {
	//get the preferences
			SharedPreferences prefs = getSharedPreferences("userPrefs",0);
			SharedPreferences.Editor editPrefs = prefs.edit();
			Map<String,?> prefString = prefs.getAll();

			for(Map.Entry<String,?> entry : prefString.entrySet()){
				Log.d("email contacts",entry.getKey() + ": " + 
						entry.getValue().toString());   
				String email =  entry.getValue().toString();
				if (email.contentEquals(emailString)) {
					editPrefs.remove(entry.getKey());
					editPrefs.commit();
				}

			}
}
	

}
